"""Create initial tables

Revision ID: d70dec89ea95
Revises: 
Create Date: 2025-05-16 10:24:38.196012

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd70dec89ea95'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('is_saved', sa.Boolean(), nullable=False),
    sa.Column('global_parameters', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_calculation_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('calculation_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('total_bonus_pool', sa.Float(), nullable=False),
    sa.Column('average_bonus', sa.Float(), nullable=False),
    sa.Column('total_employees', sa.Integer(), nullable=False),
    sa.Column('capped_employees', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['batch_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_upload_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('team', sa.String(length=100), nullable=True),
    sa.Column('base_salary', sa.Float(), nullable=False),
    sa.Column('target_bonus_pct', sa.Float(), nullable=False),
    sa.Column('investment_weight', sa.Float(), nullable=False),
    sa.Column('qualitative_weight', sa.Float(), nullable=False),
    sa.Column('investment_score_multiplier', sa.Float(), nullable=False),
    sa.Column('qual_score_multiplier', sa.Float(), nullable=False),
    sa.Column('raf', sa.Float(), nullable=False),
    sa.Column('is_mrt', sa.Boolean(), nullable=True),
    sa.Column('mrt_cap_pct', sa.Float(), nullable=True),
    sa.Column('parameter_overrides', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['batch_upload_id'], ['batch_uploads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_calculation_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_result_id', sa.Integer(), nullable=False),
    sa.Column('employee_data_id', sa.Integer(), nullable=False),
    sa.Column('investment_component', sa.Float(), nullable=False),
    sa.Column('qualitative_component', sa.Float(), nullable=False),
    sa.Column('weighted_performance', sa.Float(), nullable=False),
    sa.Column('pre_raf_bonus', sa.Float(), nullable=False),
    sa.Column('final_bonus', sa.Float(), nullable=False),
    sa.Column('bonus_to_salary_ratio', sa.Float(), nullable=False),
    sa.Column('policy_breach', sa.Boolean(), nullable=True),
    sa.Column('applied_cap', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['batch_result_id'], ['batch_calculation_results.id'], ),
    sa.ForeignKeyConstraint(['employee_data_id'], ['employee_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee_calculation_results')
    op.drop_table('employee_data')
    op.drop_table('batch_calculation_results')
    op.drop_table('batch_uploads')
    op.drop_table('batch_scenarios')
    op.drop_table('sessions')
    # ### end Alembic commands ###

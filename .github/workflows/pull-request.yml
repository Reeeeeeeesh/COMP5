name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types:
            - feat
            - fix
            - docs
            - style
            - refactor
            - perf
            - test
            - build
            - ci
            - chore
          requireScope: false
      
      - name: Check for large files
        run: |
          # Find files larger than 5MB
          large_files=$(find . -type f -size +5M -not -path "*/node_modules/*" -not -path "*/venv/*" -not -path "*/.git/*")
          if [ -n "$large_files" ]; then
            echo "The following files are larger than 5MB:"
            echo "$large_files"
            echo "Please consider reducing their size or adding them to .gitignore"
            exit 1
          fi

  frontend-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install frontend dependencies
        run: cd frontend && npm ci
      
      - name: Run frontend tests
        run: cd frontend && npm test
      
      - name: Lint frontend
        run: cd frontend && npm run lint
      
      - name: Check frontend build
        run: cd frontend && npm run build

  backend-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'backend/requirements.txt'
      
      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install flake8 black pytest
      
      - name: Lint backend with flake8
        run: cd backend && flake8 .
      
      - name: Format check with black
        run: cd backend && black --check .
      
      - name: Run backend tests
        run: cd backend && python -m pytest

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run npm audit
        run: cd frontend && npm audit --audit-level=high
      
      - name: Run pip-audit
        run: |
          cd backend
          pip install pip-audit
          pip-audit
